diff --git a/william/src/App/Cart/Calculator/CartCalculator.php b/william/src/App/Cart/Calculator/CartCalculator.php
index 6ed0bfc1dd..8574d037a0 100644
--- a/william/src/App/Cart/Calculator/CartCalculator.php
+++ b/william/src/App/Cart/Calculator/CartCalculator.php
@@ -66,7 +66,7 @@ class CartCalculator
                 continue;
             }

-            //$subtotal = $subtotal->plus($item->getSumGrossPrice());
+            $subtotal = $subtotal->plus($item->getSumGrossPrice());
         }

         $cart->setSubtotal($subtotal);
diff --git a/william/src/App/Cart/Expander/CartItemMerchantData.php b/william/src/App/Cart/Expander/CartItemMerchantData.php
index af7f65c499..88f276eb84 100644
--- a/william/src/App/Cart/Expander/CartItemMerchantData.php
+++ b/william/src/App/Cart/Expander/CartItemMerchantData.php
@@ -43,7 +43,7 @@ class CartItemMerchantData
                 $parts[$sku] = null;
             }

-            //$this->hydrateQuoteItem($item, $parts[$sku]);
+            $this->hydrateQuoteItem($item, $parts[$sku]);
         }
     }

diff --git a/william/src/App/Controller/Account/MovedAddressController.php b/william/src/App/Controller/Account/AddressController.php
similarity index 98%
rename from william/src/App/Controller/Account/MovedAddressController.php
rename to william/src/App/Controller/Account/AddressController.php
index 3e3bcfcd61..d656ae3a9f 100644
--- a/william/src/App/Controller/Account/MovedAddressController.php
+++ b/william/src/App/Controller/Account/AddressController.php
@@ -22,7 +22,7 @@ use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\Routing\Annotation\Route;

-class MovedAddressController extends AbstractController
+class AddressController extends AbstractController
 {
     private EntityManagerInterface $entityManager;
     private FormFactoryInterface $formFactory;
diff --git a/william/src/App/Controller/Cart/CartItemController.php b/william/src/App/Controller/Cart/CartItemController.php
new file mode 100644
index 0000000000..4ef2de2ac8
--- /dev/null
+++ b/william/src/App/Controller/Cart/CartItemController.php
@@ -0,0 +1,183 @@
+<?php
+
+namespace App\Controller\Cart;
+
+use App\Form\CartItemCollectionForm;
+use App\Form\CartItemForm;
+use Doctrine\ORM\EntityManagerInterface;
+use FOS\RestBundle\View\View;
+use Nelmio\ApiDocBundle\Annotation as ApiDoc;
+use OpenApi\Annotations as OA;
+use Sourceability\Ecomm\Entity\Cart\Cart;
+use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter;
+use Sourceability\Ecomm\Entity\Cart\CartItem;
+use App\Event\Cart\CartUpdate;
+use App\Event\Cart\PreAddItems;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+use Symfony\Component\Form\FormFactoryInterface;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\Routing\Annotation\Route;
+
+use function sprintf;
+
+class CartItemController
+{
+    private EntityManagerInterface $em;
+    private FormFactoryInterface $formFactory;
+    private EventDispatcherInterface $eventDispatcher;
+
+    public function __construct(
+        EntityManagerInterface $em,
+        FormFactoryInterface $formFactory,
+        EventDispatcherInterface $eventDispatcher
+    ) {
+        $this->em = $em;
+        $this->formFactory = $formFactory;
+        $this->eventDispatcher = $eventDispatcher;
+    }
+
+    /**
+     * @OA\RequestBody(
+     *     @OA\JsonContent(
+     *      type="array",
+     *      @OA\Items(ref=@ApiDoc\Model(type=CartItemForm::class))
+     *    )
+     * )
+     * @OA\Response(
+     *     response=200,
+     *     description="Adds item to the cart",
+     *     @ApiDoc\Model(type=Cart::class)
+     * )
+     *
+     * @OA\Tag(name="item")
+     *
+     * @Route("/cart/{identifier}/item/", name="cart_item_add", methods={"POST"})
+     * @ParamConverter("cart", class=Cart::class)
+     */
+    public function add(Cart $cart, Request $request): View
+    {
+        $form = $this->formFactory->createNamed('', CartItemCollectionForm::class, [], [
+            'allow_add' => true,
+            'entry_type' => CartItemForm::class,
+            'cart' => $cart,
+            'method' => 'POST',
+        ]);
+        // submit used due to problems with handleRequest with collectionForm
+        $form->submit($request->request->all());
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            $items = $form->getData();
+            $event = new PreAddItems($cart, $items);
+            $this->eventDispatcher->dispatch($event, PreAddItems::NAME);
+
+            $cart->addItems($event->getItems());
+            $event = new CartUpdate($cart);
+            $this->eventDispatcher->dispatch($event, CartUpdate::NAME);
+            $this->em->persist($cart);
+            $this->em->flush();
+
+            return View::create($cart, Response::HTTP_OK);
+        }
+
+        return View::create($form, Response::HTTP_BAD_REQUEST);
+    }
+
+    /**
+     * @OA\RequestBody(
+     *    @ApiDoc\Model(type=CartItemForm::class)
+     * )
+     *
+     * @OA\Response(
+     *     response=200,
+     *     description="Change item in the cart",
+     *     @ApiDoc\Model(type=CartItem::class)
+     * )
+     *
+     * @OA\Tag(name="item")
+     *
+     * @Route("/cart/{identifier}/item/{cartItemIdentifier}", name="cart_item_update", methods={"PATCH"})
+     * @ParamConverter("cart", class=Cart::class)
+     * @ParamConverter("cartItem", class=CartItem::class, options={"mapping": {"cartItemIdentifier": "identifier"}})
+     */
+    public function update(Cart $cart, CartItem $cartItem, Request $request): View
+    {
+        $form = $this->formFactory->createNamed('', CartItemForm::class, $cartItem, ['method' => 'PATCH']);
+        $form->submit($request->request->all(), false);
+
+        if ($form->isSubmitted() && $form->isValid()) {
+            $this->em->persist($cartItem);
+
+            $event = new CartUpdate($cart);
+            $this->eventDispatcher->dispatch($event, CartUpdate::NAME);
+
+            $this->em->persist($cart);
+            $this->em->flush();
+
+            return View::create($cartItem, Response::HTTP_OK);
+        }
+
+        return View::create($form, Response::HTTP_BAD_REQUEST);
+    }
+
+    /**
+     * @OA\Response(
+     *     description="Get item by the cart and SKU",
+     *     response=200,
+     *     @ApiDoc\Model(type=CartItem::class)
+     * )
+     *
+     * @OA\Tag(name="item")
+     *
+     * @Route("/cart/{identifier}/item/{cartItemIdentifier}", name="cart_item", methods={"GET"})
+     * @ParamConverter("cart", class=Cart::class)
+     * @ParamConverter("cartItem", class=CartItem::class, options={"mapping": {"cartItemIdentifier": "identifier"}})
+     */
+    public function get(CartItem $cartItem): View
+    {
+        return View::create($cartItem, Response::HTTP_OK);
+    }
+
+    /**
+     * @OA\Response(
+     *     description="List the cart items",
+     *     response=200,
+     *     @OA\JsonContent(
+     *         type="array",
+     *         @OA\Items(ref=@ApiDoc\Model(type=Cart::class))
+     *     )
+     * )
+     *
+     * @OA\Tag(name="item")
+     *
+     * @Route("/cart/{identifier}/item/", name="cart_item_list", methods={"GET"})
+     * @ParamConverter("cart", class=Cart::class)
+     */
+    public function list(Cart $cart): View
+    {
+        $view = View::create($cart->getItems(), Response::HTTP_OK);
+        $view->getContext()->setAttribute('initial_type', sprintf('array<%s>', CartItem::class));
+
+        return $view;
+    }
+
+    /**
+     * @OA\Response(
+     *     description="Removes the items from the cart",
+     *     response=204
+     * )
+     *
+     * @OA\Tag(name="item")
+     *
+     * @Route("/cart/{identifier}/item/{cartItemIdentifier}", name="cart_item_remove", methods={"DELETE"})
+     * @ParamConverter("cart", class=Cart::class)
+     * @ParamConverter("cartItem", class=CartItem::class, options={"mapping": {"cartItemIdentifier": "identifier"}})
+     */
+    public function delete(CartItem $cartItem): View
+    {
+        $this->em->remove($cartItem);
+        $this->em->flush();
+
+        return View::create(null, Response::HTTP_NO_CONTENT);
+    }
+}
diff --git a/william/src/App/Controller/Cart/FileAdded.txt b/william/src/App/Controller/Cart/FileAdded.txt
deleted file mode 100644
index e69de29bb2..0000000000
